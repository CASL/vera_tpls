# This will configure and build petsc
# User can configure the source path by speficfying PETSC_SRC_DIR

IF ( NOT PETSC_SRC_DIR )
    MESSAGE(FATAL_ERROR "Please specify PETSC_SRC_DIR")
ENDIF()

MESSAGE("   PETSC_SRC_DIR = ${PETSC_SRC_DIR}")
FILE(MAKE_DIRECTORY "${CMAKE_INSTALL_PREFIX}/petsc")

SET( PETSC_BUILD_DIR "${CMAKE_BINARY_DIR}/PETSC-prefix/src/PETSC-build" )
SET( COPY_PETSC_SRC 1 )     # Copy src to a temporary directory, or build in src tree

IF ( COPY_PETSC_SRC )
    SET( PETSC_CMAKE_URL            "${PETSC_SRC_DIR}"   )
    SET( PETSC_CMAKE_DOWNLOAD_DIR   "${PETSC_BUILD_DIR}" )
    SET( PETSC_CMAKE_SOURCE_DIR     "${PETSC_BUILD_DIR}" )
ELSE()
    SET( PETSC_CMAKE_URL            ""                 )
    SET( PETSC_CMAKE_DOWNLOAD_DIR   ""                 )
    SET( PETSC_CMAKE_SOURCE_DIR     "${PETSC_SRC_DIR}" )
ENDIF()

IF ( ${CMAKE_BUILD_TYPE} STREQUAL "Debug" )
    SET( PETSC_ARCH linux-gnu-opt )
    SET( BUILD_OPTS --with-debugging=1 )
ELSEIF ( ${CMAKE_BUILD_TYPE} STREQUAL "Release" )
    SET( PETSC_ARCH linux-gnu-dbg )
    SET( BUILD_OPTS --with-debugging=0 )
ELSE()
    MESSAGE ( FATAL_ERROR "Unknown CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}" )
ENDIF()
SET( CONFIGURE_OPTIONS --PETSC_ARCH=${PETSC_ARCH} --PETSC_DIR=${PETSC_CMAKE_SOURCE_DIR} )
SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --prefix=${CMAKE_INSTALL_PREFIX}/petsc )
SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --with-clanguage=c++ --with-x=false --with-x11=false )
SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --with-clanguage=c++ --with-x=false --with-x11=false )
SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} ${BUILD_OPTS} )
#SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --download-ml=${ML_TAR} )
SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --with-blas-lib=${CMAKE_INSTALL_PREFIX}/lapack/lib/libblas.a )
SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --with-lapack-lib=${CMAKE_INSTALL_PREFIX}/lapack/lib/liblapack.a )
SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --CC=${CMAKE_C_COMPILER} --CFLAGS=${CMAKE_C_FLAGS} )
SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --CXX=${CMAKE_CXX_COMPILER} --CXXFLAGS=${CMAKE_CXX_FLAGS} )
SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --FC=${CMAKE_Fortran_COMPILER} --FCFLAGS=${CMAKE_Fortran_FLAGS} )
IF ( ENABLE_SHARED AND ENABLED_STATIC )
    MESSAGE(FATAL_ERROR "Compiling petsc with both static and shared libraries is not yet supported")
ELSEIF ( ENABLE_SHARED )
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --with-shared-libraries )
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --LDFLAGS=${CMAKE_SHARED_LINKER_FLAGS} )
ELSEIF ( ENABLE_STATIC )
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} )
ENDIF()

EXTERNALPROJECT_ADD( 
    PETSC
    URL                 "${PETSC_CMAKE_URL}"
    DOWNLOAD_DIR        "${PETSC_CMAKE_DOWNLOAD_DIR}"
    SOURCE_DIR          "${PETSC_CMAKE_SOURCE_DIR}"
    UPDATE_COMMAND      ""
    CONFIGURE_COMMAND   ${PETSC_SRC_DIR}/configure --prefix=${CMAKE_INSTALL_PREFIX}/petsc ${CONFIGURE_OPTIONS}
    BUILD_COMMAND       make -j ${PROCS_INSTALL}
    BUILD_IN_SOURCE     1
    INSTALL_COMMAND     make install
    DEPENDS             LAPACK
)

