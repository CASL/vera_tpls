#!/bin/sh
# Testsuite for Silo
AT_INIT(VALGRIND="$VALGRIND" DB_HDF5="$DB_HDF5")
AT_COPYRIGHT([This work was performed under the auspices of 
the U.S. Department of Energy by 
Lawrence Livermore National Laboratory 
in part under Contract W-7405-Eng-48 and 
in part under Contract DE-AC52-07NA27344.])

AT_BANNER(Non-driver-specific)
AT_SETUP(version)
AT_DATA(expout,
This version of Silo is greater than or equal to 4.6
This version of Silo is NOT greater than or equal to 90.5.2
DBVersion() returns "AT_PACKAGE_VERSION"
DBVersionGE(4,6,0) returns 1
DBVersionGE(90,5,2) returns 0
On file handle returned from DBCreate...
    DBFileVersion() returns "AT_PACKAGE_VERSION"
    DBFileVersionGE(4,6,0) returns 1
    DBFileVersionGE(90,5,2) returns 0
On file handle returned from DBOpen...
    DBFileVersion() returns "AT_PACKAGE_VERSION"
    DBFileVersionGE(4,6,0) returns 1
    DBFileVersionGE(90,5,2) returns 0
On old silo file handle returned from DBOpen...
    DBFileVersion() returns "unknown; 4.5 or older"
    DBFileVersionGE(3,0,0) returns -1
    DBFileVersionGE(4,6,0) returns 0
    DBFileVersionGE(90,5,2) returns 0
)
AT_CHECK($VALGRIND version $DB_HDF5,,expout,ignore)
AT_CLEANUP
AT_SETUP(namescheme)
AT_CHECK($VALGRIND namescheme,,ignore)
AT_CLEANUP
AT_SETUP(point)
AT_CHECK($VALGRIND point $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(extface)
AT_CHECK($VALGRIND extface $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(testall -small)
AT_CHECK($VALGRIND testall -small $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(TestReadMask) # needs files generated by other execs 
AT_CHECK(extface $DB_HDF5,,ignore) # don't valgrind these intermediate parts
AT_CHECK(point $DB_HDF5,,ignore)
AT_CHECK(testall -small $DB_HDF5,,ignore)
AT_CHECK($VALGRIND TestReadMask $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(array)
AT_CHECK($VALGRIND array $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(multi_test)
AT_CHECK($VALGRIND multi_test $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(multi_test earlyclose)
AT_CHECK($VALGRIND multi_test earlyclose $DB_HDF5,,ignore,ignore)
AT_CLEANUP
AT_SETUP(partial_io)
AT_CHECK($VALGRIND partial_io $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(simple)
AT_CHECK($VALGRIND simple $DB_HDF5,0,ignore)
AT_CLEANUP
AT_SETUP(ucd)
AT_CHECK($VALGRIND ucd $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(ucdsamp3)
AT_CHECK($VALGRIND ucdsamp3 $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(testall -small -fortran)
AT_CHECK($VALGRIND testall -small -fortran $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(obj)
AT_CHECK($VALGRIND obj $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(onehex)
AT_CHECK($VALGRIND onehex $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(oneprism)
AT_CHECK($VALGRIND oneprism $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(onepyramid)
AT_CHECK($VALGRIND onepyramid $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(onetet)
AT_CHECK($VALGRIND onetet $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(subhex)
AT_CHECK($VALGRIND subhex $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(twohex)
AT_CHECK($VALGRIND twohex $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(multispec)
AT_CHECK($VALGRIND multispec $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(sami)
AT_CHECK($VALGRIND sami $DB_HDF5,,ignore,ignore)
AT_CLEANUP
AT_SETUP(specmix)
AT_CHECK($VALGRIND specmix $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(spec)
AT_CHECK($VALGRIND spec $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(group_test)
AT_CHECK($VALGRIND group_test 0 0 0 $DB_HDF5,,ignore,ignore)
AT_CLEANUP
AT_SETUP(listtypes)
AT_CHECK($VALGRIND ucd $DB_HDF5,,ignore)
AT_CHECK(test -z "$DB_HDF5" && $VALGRIND listtypes ucd.pdb || $VALGRIND listtypes ucd.h5,,ignore,ignore)
AT_CLEANUP
AT_SETUP(alltypes)
AT_CHECK($VALGRIND alltypes $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(wave)
AT_CHECK($VALGRIND wave $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(polyzl)
AT_CHECK($VALGRIND polyzl $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(csg)
AT_CHECK($VALGRIND csg $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(rocket)
AT_CHECK($VALGRIND rocket $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(mmadjacency)
AT_CHECK($VALGRIND mmadjacency $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(mat3d_3across)
AT_CHECK($VALGRIND mat3d_3across $DB_HDF5)
AT_CLEANUP
AT_SETUP(ucd1d)
AT_CHECK($VALGRIND ucd1d $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(dir)
AT_CHECK($VALGRIND dir $DB_HDF5,,ignore,ignore)
AT_CLEANUP
AT_SETUP(quad)
AT_CHECK($VALGRIND quad $DB_HDF5,,ignore)
AT_CLEANUP

AT_BANNER(pythonmodule)
AT_SETUP(read)
AT_KEYWORDS(python)
AT_CHECK(multi_test $DB_HDF5 hdf-friendly,,ignore) # generate data for python tests
AT_CHECK(test -z "$PYTHON" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_read.py,,ignore,ignore)
AT_CLEANUP
AT_SETUP(write)
AT_KEYWORDS(python)
AT_DATA(expout,[toc=nvar = 12
var_names = (_fileinfo, _silolibinfo, t1, t10, t11, t2, t3, t4, t5, t6, t7, t8)
ndir = 1
dir_names = (a)

t2='hello'
t6= (1.2, 10.199999999999999)
a/t8='x2'
t9=x3
/t5= (1.2, 10.0)
])
AT_CHECK(test -z "$PYTHON" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_write.py,,expout,ignore)
AT_CLEANUP
AT_SETUP(error handling)
AT_KEYWORDS(python)
AT_CHECK(multi_test $DB_HDF5 hdf-friendly,,ignore) # generate data for python tests
AT_CHECK(test -z "$PYTHON" && exit 77 || env PYTHONPATH=../../../tools/python/.libs $PYTHON ../../test_error.py,,ignore,ignore)
AT_CLEANUP

AT_BANNER(PDB Specific)
AT_SETUP(testpdb)
AT_CHECK(test -n "$DB_HDF5" && exit 77 || $VALGRIND testpdb,ignore,ignore)
AT_CLEANUP

AT_BANNER(HDF5 Specific)
AT_SETUP(grab)
AT_CHECK(test -z "$DB_HDF5" && exit 77 || $VALGRIND grab,,ignore,ignore)
AT_CLEANUP
AT_SETUP(compression gzip)
AT_KEYWORDS(compression)
AT_CHECK(test -z "$DB_HDF5" && exit 77 || $VALGRIND compression gzip,,ignore,ignore)
AT_CHECK(test -z "$DB_HDF5" && exit 77 || $VALGRIND compression readonly,,ignore,ignore)
AT_CLEANUP
AT_SETUP(compression szip)
AT_KEYWORDS(compression)
AT_CHECK(test -z "$DB_HDF5" && exit 77 || $VALGRIND compression szip,,ignore,ignore)
AT_CHECK(test -z "$DB_HDF5" && exit 77 || $VALGRIND compression readonly,,ignore,ignore)
AT_CLEANUP
AT_SETUP(compression fpzip)
AT_KEYWORDS(compression)
AT_CHECK(test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o -z "$DB_HDF5" && exit 77 || $VALGRIND compression fpzip,,ignore,ignore)
AT_CHECK(test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o -z "$DB_HDF5" && exit 77 || $VALGRIND compression readonly,,ignore,ignore)
AT_CLEANUP
AT_SETUP(compression lossy3)
AT_KEYWORDS(compression)
AT_CHECK(test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o -z "$DB_HDF5" && exit 77 || $VALGRIND compression lossy3,,ignore,ignore)
AT_CHECK(test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o -z "$DB_HDF5" && exit 77 || $VALGRIND compression readonly,50,ignore,ignore)
AT_CLEANUP
AT_SETUP(compression minratio1000)
AT_KEYWORDS(compression)
AT_CHECK(test ! \( -e ../src/fpzip/read.o -o -e ../../../src/fpzip/read.o \) -o -z "$DB_HDF5" && exit 77 || $VALGRIND compression minratio1000,1,ignore,ignore)
AT_CLEANUP
AT_SETUP(testhzip)
AT_KEYWORDS(compression)
AT_CHECK(test ! \( -e ../src/hzip/hzutil.o -o -e ../../../src/hzip/hzutil.o \) -o -z "$BROWSER" -o -z "$DB_HDF5" && exit 77 || $VALGRIND testhzip `pwd`,,ignore,ignore)
AT_CLEANUP
AT_SETUP(checksums)
AT_CHECK(test -z "$BROWSER" -o -z "$DB_HDF5" && exit 77 || $VALGRIND checksums `pwd`,,ignore,ignore)
AT_CLEANUP
AT_SETUP(xversion)
AT_CHECK(test -z "$BROWSER" -o -z "$DB_HDF5" && exit 77 || $VALGRIND testxvers `pwd`,,ignore,ignore)
AT_CLEANUP
AT_SETUP(largefile)
AT_KEYWORDS(large)
AT_CHECK(test -z "$DB_HDF5" && exit 77 || $VALGRIND largefile,,ignore,ignore)
AT_CLEANUP

AT_BANNER(Fortran)
AT_SETUP(arrayf77)
AT_KEYWORDS(fortran)
AT_CHECK(test ! \( -f arrayf77 -o -f ../../arrayf77 \) && exit 77 || $VALGRIND arrayf77,,ignore,ignore)
AT_CLEANUP
AT_SETUP(curvef77)
AT_KEYWORDS(fortran)
AT_CHECK(test ! \( -f curvef77 -o -f ../../curvef77 \) && exit 77 || $VALGRIND curvef77,,ignore,ignore)
AT_CLEANUP
AT_SETUP(matf77)
AT_KEYWORDS(fortran)
AT_CHECK(test ! \( -f matf77 -o -f ../../matf77 \) && exit 77 || $VALGRIND matf77,,ignore,ignore)
AT_CLEANUP
AT_SETUP(pointf77)
AT_KEYWORDS(fortran)
AT_CHECK(test ! \( -f pointf77 -o -f ../../pointf77 \) && exit 77 || $VALGRIND pointf77,,ignore,ignore)
AT_CLEANUP
AT_SETUP(quadf77)
AT_KEYWORDS(fortran)
AT_CHECK(test ! \( -f quadf77 -o -f ../../quadf77 \) && exit 77 || $VALGRIND quadf77,,ignore,ignore)
AT_CLEANUP
AT_SETUP(testallf77)
AT_KEYWORDS(fortran)
AT_CHECK(test ! \( -f testallf77 -o -f ../../testallf77 \) && exit 77 || $VALGRIND testallf77,,ignore,ignore)
AT_CLEANUP
AT_SETUP(ucdf77)
AT_KEYWORDS(fortran)
AT_CHECK(test ! \( -f ucdf77 -o -f ../../ucdf77 \) && exit 77 || $VALGRIND ucdf77,,ignore,ignore)
AT_CLEANUP

AT_BANNER(Special)
AT_SETUP(silock)
AT_KEYWORDS(tools)
AT_CHECK(testsilock `pwd` $DB_HDF5,,ignore,ignore)
AT_CLEANUP
AT_SETUP(multi_file)
AT_KEYWORDS(large)
AT_CHECK($VALGRIND multi_file $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(testall -medium)
AT_KEYWORDS(large)
AT_CHECK($VALGRIND testall -medium $DB_HDF5,,ignore)
AT_CLEANUP
AT_SETUP(testall -large)
AT_KEYWORDS(large)
AT_CHECK($VALGRIND testall -large $DB_HDF5,,ignore)
AT_CLEANUP
#AT_SETUP(cpz1plt)
#AT_CHECK($VALGRIND cpz1plt $DB_HDF5)   # Fails with: Missing input file "z1plt", cannot continue.
#AT_CLEANUP
#AT_SETUP(resample)
#AT_CHECK($VALGRIND resample $DB_HDF5) # mpi test, mpirun
#AT_CLEANUP
#AT_SETUP(merge_block)
#AT_CHECK($VALGRIND merge_block $DB_HDF5) # requires arguments
#AT_CLEANUP
